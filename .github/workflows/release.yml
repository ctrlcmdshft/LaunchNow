name: Release Build

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0

env:
  XCODE_VERSION: '15.4'
  SCHEME_NAME: 'LaunchNow'
  CONFIGURATION: 'Release'

jobs:
  release:
    name: Create Release Build
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}
        
    - name: Get version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Cache derived data
      uses: actions/cache@v4
      with:
        path: ~/Library/Developer/Xcode/DerivedData
        key: ${{ runner.os }}-release-derived-data-${{ hashFiles('**/*.pbxproj') }}
        
    - name: Clean and build
      run: |
        xcodebuild clean archive \
          -project LaunchNow.xcodeproj \
          -scheme ${{ env.SCHEME_NAME }} \
          -configuration ${{ env.CONFIGURATION }} \
          -destination 'platform=macOS' \
          -archivePath build/LaunchNow-${{ steps.version.outputs.VERSION }}.xcarchive \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO
          
    - name: Create app bundle
      run: |
        mkdir -p "build/LaunchNow ${{ steps.version.outputs.VERSION }}"
        cp -R "build/LaunchNow-${{ steps.version.outputs.VERSION }}.xcarchive/Products/Applications/LaunchNow.app" "build/LaunchNow ${{ steps.version.outputs.VERSION }}/"
        
    - name: Create DMG
      run: |
        hdiutil create \
          -volname "LaunchNow ${{ steps.version.outputs.VERSION }}" \
          -srcfolder "build/LaunchNow ${{ steps.version.outputs.VERSION }}" \
          -ov -format UDZO \
          "build/LaunchNow-${{ steps.version.outputs.VERSION }}.dmg"
          
    - name: Create ZIP archive
      run: |
        cd "build/LaunchNow ${{ steps.version.outputs.VERSION }}"
        zip -r "../LaunchNow-${{ steps.version.outputs.VERSION }}.zip" .
        cd ../..
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: LaunchNow ${{ steps.version.outputs.VERSION }}
        body: |
          ## LaunchNow ${{ steps.version.outputs.VERSION }}
          
          ### Changes
          - Auto-generated release from tag ${{ steps.version.outputs.VERSION }}
          
          ### Download
          - **LaunchNow-${{ steps.version.outputs.VERSION }}.dmg** - Recommended installation method
          - **LaunchNow-${{ steps.version.outputs.VERSION }}.zip** - App bundle only
          
          ### Installation
          1. Download the DMG file
          2. Open the DMG and drag LaunchNow to your Applications folder
          3. Launch LaunchNow from Applications or using Spotlight
          
          ### Requirements
          - macOS 12.0 or later
          - Apple Silicon or Intel Mac
        draft: false
        prerelease: false
        
    - name: Upload DMG
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/LaunchNow-${{ steps.version.outputs.VERSION }}.dmg
        asset_name: LaunchNow-${{ steps.version.outputs.VERSION }}.dmg
        asset_content_type: application/octet-stream
        
    - name: Upload ZIP
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/LaunchNow-${{ steps.version.outputs.VERSION }}.zip
        asset_name: LaunchNow-${{ steps.version.outputs.VERSION }}.zip
        asset_content_type: application/zip